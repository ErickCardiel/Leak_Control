Archive member included because of file (symbol)

c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/avr5\libgcc.a(_udivmodhi4.o)
                              UART0.o (__udivmodhi4)
c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/avr5\libgcc.a(_exit.o)
                              c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm328p.o (exit)
c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/avr5\libgcc.a(_copy_data.o)
                              Test2.o (__do_copy_data)
c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/avr5\libgcc.a(_clear_bss.o)
                              Test2.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm328p.o
LOAD Test2.o
LOAD UART0.o
LOAD c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/avr5\libgcc.a
LOAD c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x340
 *(.vectors)
 .vectors       0x00000000       0x68 c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm328p.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000068                . = ALIGN (0x2)
                0x00000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000068        0x0 linker stubs
 *(.trampolines*)
                0x00000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000068                __ctors_start = .
 *(.ctors)
                0x00000068                __ctors_end = .
                0x00000068                __dtors_start = .
 *(.dtors)
                0x00000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000068        0x0 c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm328p.o
                0x00000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000068        0x8 c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000070       0x16 c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/avr5\libgcc.a(_copy_data.o)
                0x00000070                __do_copy_data
 .init4         0x00000086       0x10 c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/avr5\libgcc.a(_clear_bss.o)
                0x00000086                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000096        0x8 c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x0000009e        0x4 c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm328p.o
                0x0000009e                __vector_22
                0x0000009e                __vector_24
                0x0000009e                __vector_12
                0x0000009e                __bad_interrupt
                0x0000009e                __vector_6
                0x0000009e                __vector_23
                0x0000009e                __vector_25
                0x0000009e                __vector_11
                0x0000009e                __vector_13
                0x0000009e                __vector_17
                0x0000009e                __vector_19
                0x0000009e                __vector_7
                0x0000009e                __vector_5
                0x0000009e                __vector_4
                0x0000009e                __vector_9
                0x0000009e                __vector_2
                0x0000009e                __vector_21
                0x0000009e                __vector_15
                0x0000009e                __vector_8
                0x0000009e                __vector_14
                0x0000009e                __vector_10
                0x0000009e                __vector_16
                0x0000009e                __vector_18
                0x0000009e                __vector_20
 .text          0x000000a2      0x178 Test2.o
                0x000000be                __vector_1
                0x00000122                __vector_3
                0x00000186                main
                0x000000a2                setup
 .text          0x0000021a       0xfc UART0.o
                0x0000030c                clrscr
                0x0000025e                itoa
                0x00000244                UART0_Init
                0x0000022a                UART0_puts
                0x0000021a                UART0_putchar
 .text          0x00000316        0x0 c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/avr5\libgcc.a(_udivmodhi4.o)
 .text          0x00000316        0x0 c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/avr5\libgcc.a(_exit.o)
 .text          0x00000316        0x0 c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/avr5\libgcc.a(_copy_data.o)
 .text          0x00000316        0x0 c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/avr5\libgcc.a(_clear_bss.o)
                0x00000316                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000316       0x28 c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/avr5\libgcc.a(_udivmodhi4.o)
                0x00000316                __udivmodhi4
 .text.libgcc   0x0000033e        0x0 c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x0000033e        0x0 c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x0000033e        0x0 c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/avr5\libgcc.a(_clear_bss.o)
                0x0000033e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000033e        0x0 c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/avr5\libgcc.a(_exit.o)
                0x0000033e                exit
                0x0000033e                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000033e        0x2 c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000340                _etext = .

.data           0x00800100        0x8 load address 0x00000340
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm328p.o
 .data          0x00800100        0x3 Test2.o
                0x00800101                EIMSK
 .data          0x00800103        0x5 UART0.o
 .data          0x00800108        0x0 c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/avr5\libgcc.a(_udivmodhi4.o)
 .data          0x00800108        0x0 c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/avr5\libgcc.a(_exit.o)
 .data          0x00800108        0x0 c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/avr5\libgcc.a(_copy_data.o)
 .data          0x00800108        0x0 c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800108                . = ALIGN (0x2)
                0x00800108                _edata = .
                0x00800108                PROVIDE (__data_end, .)

.bss            0x00800108        0x6 load address 0x00000348
                0x00800108                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800108        0x0 c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm328p.o
 .bss           0x00800108        0x6 Test2.o
                0x00800108                pulses
                0x0080010c                toggle
                0x0080010a                antPulses
 .bss           0x0080010e        0x0 UART0.o
 .bss           0x0080010e        0x0 c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/avr5\libgcc.a(_udivmodhi4.o)
 .bss           0x0080010e        0x0 c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/avr5\libgcc.a(_exit.o)
 .bss           0x0080010e        0x0 c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/avr5\libgcc.a(_copy_data.o)
 .bss           0x0080010e        0x0 c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x0080010e                PROVIDE (__bss_end, .)
                0x00000340                __data_load_start = LOADADDR (.data)
                0x00000348                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080010e        0x0
                0x0080010e                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080010e                PROVIDE (__noinit_end, .)
                0x0080010e                _end = .
                0x0080010e                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x360
 *(.stab)
 .stab          0x00000000      0x360 c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm328p.o

.stabstr        0x00000000       0x5f
 *(.stabstr)
 .stabstr       0x00000000       0x5f c:/winavr-20071221/bin/../lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm328p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x40
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 Test2.o
 .debug_aranges
                0x00000020       0x20 UART0.o

.debug_pubnames
                0x00000000       0xc7
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x71 Test2.o
 .debug_pubnames
                0x00000071       0x56 UART0.o

.debug_info     0x00000000      0x2ed
 *(.debug_info)
 .debug_info    0x00000000      0x147 Test2.o
 .debug_info    0x00000147      0x1a6 UART0.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x1b7
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0xb2 Test2.o
 .debug_abbrev  0x000000b2      0x105 UART0.o

.debug_line     0x00000000      0x2b6
 *(.debug_line)
 .debug_line    0x00000000      0x157 Test2.o
 .debug_line    0x00000157      0x15f UART0.o

.debug_frame    0x00000000       0xb0
 *(.debug_frame)
 .debug_frame   0x00000000       0x50 Test2.o
 .debug_frame   0x00000050       0x60 UART0.o

.debug_str      0x00000000      0x148
 *(.debug_str)
 .debug_str     0x00000000       0xe8 Test2.o
                                0x121 (size before relaxing)
 .debug_str     0x000000e8       0x60 UART0.o
                                0x12d (size before relaxing)

.debug_loc      0x00000000      0x151
 *(.debug_loc)
 .debug_loc     0x00000000      0x151 UART0.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Test2.elf elf32-avr)
LOAD linker stubs
